package main

import (
	"log"
	"os"
	"text/template"

	"golang.org/x/tools/imports"
)

var (
	data = []struct {
		Type, Name string
	}{
		{"int", "Int"},
		{"int8", "Int8"},
		{"int16", "Int16"},
		{"int32", "Int32"},
		{"int64", "Int64"},
		{"uint", "Uint"},
		{"uint8", "Uint8"},
		{"uint16", "Uint16"},
		{"uint32", "Uint32"},
		{"uint64", "Uint64"},
		{"float32", "Float32"},
		{"float64", "Float64"},
		{"string", "String"},
	}

	tmplStr = `// Code generated by bin/gen; DO NOT EDIT

package sortcmp
{{ range $i, $v := . }}
func Compare{{ $v.Name }}(i, j {{ $v.Type }}) func() int {
	return func() int {
		if i < j {
			return 1
		}
		if i == j {
			return 0
		}
		return -1
	}
}
{{ end }}`

	tmpl = template.Must(template.New("sortcmp").Parse(tmplStr))
	out  = "../cmp.gen.go"
)

func main() {
	file, err := os.Create(out)
	if err != nil {
		log.Fatal(err)
	}
	defer file.Close()

	tmpl.Execute(file, data)

	_, err = imports.Process(out, nil, nil)
	if err != nil {
		log.Fatal(err)
	}
}
