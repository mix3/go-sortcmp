// Code generated by bin/gen; DO NOT EDIT

package sortcmp

func CompareInt(i, j int) func() int {
	return func() int {
		if i < j {
			return 1
		}
		if i == j {
			return 0
		}
		return -1
	}
}

func CompareInt8(i, j int8) func() int {
	return func() int {
		if i < j {
			return 1
		}
		if i == j {
			return 0
		}
		return -1
	}
}

func CompareInt16(i, j int16) func() int {
	return func() int {
		if i < j {
			return 1
		}
		if i == j {
			return 0
		}
		return -1
	}
}

func CompareInt32(i, j int32) func() int {
	return func() int {
		if i < j {
			return 1
		}
		if i == j {
			return 0
		}
		return -1
	}
}

func CompareInt64(i, j int64) func() int {
	return func() int {
		if i < j {
			return 1
		}
		if i == j {
			return 0
		}
		return -1
	}
}

func CompareUint(i, j uint) func() int {
	return func() int {
		if i < j {
			return 1
		}
		if i == j {
			return 0
		}
		return -1
	}
}

func CompareUint8(i, j uint8) func() int {
	return func() int {
		if i < j {
			return 1
		}
		if i == j {
			return 0
		}
		return -1
	}
}

func CompareUint16(i, j uint16) func() int {
	return func() int {
		if i < j {
			return 1
		}
		if i == j {
			return 0
		}
		return -1
	}
}

func CompareUint32(i, j uint32) func() int {
	return func() int {
		if i < j {
			return 1
		}
		if i == j {
			return 0
		}
		return -1
	}
}

func CompareUint64(i, j uint64) func() int {
	return func() int {
		if i < j {
			return 1
		}
		if i == j {
			return 0
		}
		return -1
	}
}

func CompareFloat32(i, j float32) func() int {
	return func() int {
		if i < j {
			return 1
		}
		if i == j {
			return 0
		}
		return -1
	}
}

func CompareFloat64(i, j float64) func() int {
	return func() int {
		if i < j {
			return 1
		}
		if i == j {
			return 0
		}
		return -1
	}
}

func CompareString(i, j string) func() int {
	return func() int {
		if i < j {
			return 1
		}
		if i == j {
			return 0
		}
		return -1
	}
}
